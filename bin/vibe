#!/bin/env python
import linter
from linter import (Recipie_Type,
                    recipies_directory,
                    RECIPE_NAME,
                    process_yamls,
                    load_recipies)
from pathlib import Path
import sys

help_string = ''' Vibe Cooking Helper Utility

for a new recipie template:
          vibe new "recipe name"

to check the validity all files:
          vibe lint

to check the validity of a silgle recipy:
          vibe lint path/to/recipy

to list out all recipies, along with dates and users if information avalible:
        vibe list

to list out all authors, along  with the number of recipies they have writen, type:
        vibe list authors

to list out all tags, along with the number of recipies with this tag
    vibe list tags

'''

if ('--help' in sys.argv) or ('help' in sys.argv):
    print(help_string)
    sys.exit()

match sys.argv:
    case [str(), "new", str()]:
        print("new vibe")
        title = sys.argv[2]
        content = '---'
        asdict = Recipie_Type.__dir__()
        for field, info in zip(Recipie_Type._fields, Recipie_Type):
            if field in {'markdown', 'file'}:
                continue
            content += '\n' + field + ': ' + ('(Manditory) ' if info[0] else '')
        content += '\n---\n Recipie Goes Hear'
        recipie_directory = Path(recipies_directory.joinpath(title))
        if recipie_directory.exists():
            print('Im sorry but that recipy already exists')
            sys.exit(1)
        recipie_directory.mkdir()
        recipie_file = recipie_directory.joinpath(RECIPE_NAME)
        with open(recipie_file, 'w') as f:
            f.write(content)
        print('done!')
        print(f'open "{recipie_file}" to edit and git to push recipy')
    case [str(), "lint"]:
        print("lint vibe")
        from linter import process_yamls, load_recipies
        list(process_yamls(load_recipies(print=print), print=print))
    case [str(), "lint", str()]:
        print('lint ' + sys.argv[2])
        list(process_yamls(load_recipies(
            Path(sys.argv[2]),
            recipies_directory=None,
            print=print), print=print))
    case [str(), 'list'] | [str(), 'list', 'recipies']:
        print('list vibe recipies')
        for n, recipie in enumerate(linter.recipies()):
            print(
                str(n).rjust(3) + ':  ' + recipie.title
                + (f' [by {recipie.author}] ' if recipie.author is not None else '')
                + (f'{recipie.date}' if recipie.date is not None else ' ')
                )

    case [str(), 'list', 'authors']:
        print('list vibe authors')
        data = linter.recipies()
        count = {None: 0} | {author: 0 for author in linter.authors}
        name_lengths = max([len(author) for author in linter.authors])
        for d in data:
            count[d.author] += 1
        for n, author in enumerate(linter.authors):
            print(str(n).rjust(3) + ':  '
                  + author.rjust(name_lengths)
                  + f' ({count[author]})')

    case [str(), 'list', 'tags']:
        print('list vibe tags')
        tags = [(len(recipies), tag)
                for tag, recipies
                in linter.tags(linter.recipies()).items()]
        tag_length = max([len(tag[1]) for tag in tags])
        for count, tag in sorted(tags):
            print(tag.rjust(tag_length) + f' [{count}]')

    case _:
        print("[UNKNOWN VIBE]")
        print(help_string)
